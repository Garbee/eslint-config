const firstNested = 'first-nested';
const afterComment = 'after-comment';
const alwaysSingleLine = 'always-single-line';
const alwaysMultiLine = 'always-multi-line';
// eslint-disable-next-line max-len -- duh
// eslint-disable-next-line unicorn/no-unsafe-regex,prefer-named-capture-group -- Not necessary
const kebabCase = /^([a-z][\da-z]*)(-[\da-z]+)*$/u;

module.exports = {
  'indentation': 2,
  'string-quotes': 'single',
  'no-duplicate-selectors': true,
  'color-hex-case': 'lower',
  'color-hex-length': 'long',
  'color-named': 'never',
  'selector-no-id': true,
  'selector-combinator-space-after': 'always',
  'selector-attribute-quotes': 'always',
  'selector-attribute-operator-space-before': 'never',
  'selector-attribute-operator-space-after': 'never',
  'selector-attribute-brackets-space-inside': 'never',
  'declaration-block-trailing-semicolon': 'always',
  'declaration-no-important': true,
  'declaration-colon-space-before': 'never',
  'declaration-colon-space-after': 'always',
  'number-leading-zero': 'never',
  'function-url-quotes': 'always',
  'font-weight-notation': 'named-where-possible',
  'font-family-name-quotes': 'always-unless-keyword',
  'comment-whitespace-inside': 'always',
  'comment-empty-line-before': 'always',
  'rule-empty-line-before': 'always',
  'selector-pseudo-element-colon-notation': 'double',
  'selector-pseudo-class-parentheses-space-inside': 'never',
  'selector-no-universal': true,
  'media-feature-range-operator-space-before': 'always',
  'media-feature-range-operator-space-after': 'always',
  'media-feature-parentheses-space-inside': 'never',
  'media-feature-colon-space-before': 'never',
  'media-feature-colon-space-after': 'always',
  'alpha-value-notation': [
    'percentage',
    {
      exceptProperties: [
        'opacity',
        'fill-opacity',
        'flood-opacity',
        'stop-opacity',
        'stroke-opacity',
      ],
    },
  ],
  'at-rule-empty-line-before': [
    'always',
    {
      except: [
        'blockless-after-same-name-blockless',
        firstNested,
      ],
      ignore: [afterComment],
    },
  ],
  'at-rule-name-case': 'lower',
  'at-rule-name-space-after': alwaysSingleLine,
  'at-rule-no-vendor-prefix': true,
  'at-rule-semicolon-newline-after': 'always',
  'block-closing-brace-empty-line-before': 'never',
  'block-closing-brace-newline-after': 'always',
  'block-closing-brace-newline-before': alwaysMultiLine,
  'block-closing-brace-space-before': alwaysSingleLine,
  'block-opening-brace-newline-after': alwaysMultiLine,
  'block-opening-brace-space-after': alwaysSingleLine,
  'block-opening-brace-space-before': 'always',
  'color-function-notation': 'modern',
  'custom-property-empty-line-before': [
    'always',
    {
      except: [
        'after-custom-property',
        firstNested,
      ],
      ignore: [
        afterComment,
        'inside-single-line-block',
      ],
    },
  ],
  'custom-media-pattern': [
    kebabCase,
    {
      message: 'Expected custom media query name to be kebab-case',
    },
  ],
  'custom-property-pattern': [
    kebabCase,
    {
      message: 'Expected custom property name to be kebab-case',
    },
  ],
  'declaration-bang-space-after': 'never',
  'declaration-bang-space-before': 'always',
  'declaration-block-semicolon-newline-after': alwaysMultiLine,
  'declaration-block-semicolon-space-after': alwaysSingleLine,
  'declaration-block-semicolon-space-before': 'never',
  'declaration-block-single-line-max-declarations': 1,
  'declaration-block-no-redundant-longhand-properties': true,
  'declaration-colon-newline-after': alwaysMultiLine,
  'declaration-empty-line-before': [
    'always',
    {
      except: [
        'after-declaration',
        firstNested,
      ],
      ignore: [
        afterComment,
        'inside-single-line-block',
      ],
    },
  ],
  'function-comma-newline-after': alwaysMultiLine,
  'function-comma-space-after': alwaysSingleLine,
  'function-comma-space-before': 'never',
  'function-max-empty-lines': 0,
  'function-name-case': 'lower',
  'function-parentheses-newline-inside': alwaysMultiLine,
  'function-parentheses-space-inside': 'never-single-line',
  'function-whitespace-after': 'always',
  'hue-degree-notation': 'angle',
  'import-notation': 'string',
  'keyframe-selector-notation': 'percentage-unless-within-keyword-only-block',
  'keyframes-name-pattern': [
    kebabCase,
    {
      message: 'Expected keyframe name to be kebab-case',
    },
  ],
  'length-zero-no-unit': true,
  'max-empty-lines': 1,
  'max-line-length': 80,
  'media-feature-name-case': 'lower',
  'media-feature-name-no-vendor-prefix': true,
  'media-query-list-comma-newline-after': alwaysMultiLine,
  'media-query-list-comma-space-after': alwaysSingleLine,
  'media-query-list-comma-space-before': 'never',
  'no-empty-first-line': true,
  'no-eol-whitespace': true,
  'no-missing-end-of-source-newline': true,
  'number-max-precision': 4,
  'number-no-trailing-zeros': true,
  'property-case': 'lower',
  'property-no-vendor-prefix': true,
  'selector-class-pattern': [
    kebabCase,
    {
      message: 'Expected class selector to be kebab-case',
    },
  ],
  'selector-combinator-space-before': 'always',
  'selector-descendant-combinator-no-non-space': true,
  'selector-id-pattern': [
    kebabCase,
    {
      message: 'Expected id selector to be kebab-case',
    },
  ],
  'selector-list-comma-newline-after': 'always',
  'selector-list-comma-space-before': 'never',
  'selector-max-empty-lines': 0,
  'selector-no-vendor-prefix': true,
  'selector-not-notation': 'complex',
  'selector-pseudo-class-case': 'lower',
  'selector-pseudo-element-case': 'lower',
  'selector-type-case': 'lower',
  'shorthand-property-no-redundant-values': true,
  'unit-case': 'lower',
  'value-keyword-case': 'lower',
  'value-list-comma-newline-after': alwaysMultiLine,
  'value-list-comma-space-after': alwaysSingleLine,
  'value-list-comma-space-before': 'never',
  'value-list-max-empty-lines': 0,
  'value-no-vendor-prefix': true,
  'annotation-no-unknown': true,
  'at-rule-no-unknown': true,
  'block-no-empty': true,
  'color-no-invalid-hex': true,
  'comment-no-empty': true,
  'custom-property-no-missing-var-function': true,
  'declaration-block-no-duplicate-custom-properties': true,
  'declaration-block-no-duplicate-properties': [
    true,
    {
      ignore: ['consecutive-duplicates-with-different-values'],
    },
  ],
  'declaration-block-no-shorthand-property-overrides': true,
  'font-family-no-duplicate-names': true,
  'font-family-no-missing-generic-family-keyword': true,
  'function-calc-no-unspaced-operator': true,
  'function-linear-gradient-no-nonstandard-direction': true,
  'function-no-unknown': true,
  'keyframe-block-no-duplicate-selectors': true,
  'keyframe-declaration-no-important': true,
  'media-feature-name-no-unknown': true,
  'named-grid-areas-no-invalid': true,
  'no-descending-specificity': true,
  'no-duplicate-at-import-rules': true,
  'no-empty-source': true,
  'no-extra-semicolons': true,
  'no-invalid-double-slash-comments': true,
  'no-invalid-position-at-import-rule': true,
  'no-irregular-whitespace': true,
  'property-no-unknown': true,
  'selector-pseudo-class-no-unknown': true,
  'selector-pseudo-element-no-unknown': true,
  'selector-type-no-unknown': [
    true,
    {
      ignore: ['custom-elements'],
    },
  ],
  'string-no-newline': true,
  'unit-no-unknown': true,
  'color-hex-alpha': 'never',

  /*
   * TODO
   * 'function-url-no-scheme-relative': 'error',
   * 'function-url-scheme-allowed-list': 'error',
   * 'function-url-scheme-disallowed-list': 'error',
   * 'time-min-milliseconds': 'error',
   * 'unit-allowed-list': 'error',
   * 'unit-disallowed-list': 'error',
   * 'property-allowed-list': 'error',
   * 'property-disallowed-list': 'error',
   * 'declaration-property-max-values': 'error',
   * 'declaration-property-unit-allowed-list': 'error',
   * 'declaration-property-unit-disallowed-list': 'error',
   * 'declaration-property-value-allowed-list': 'error',
   * 'declaration-property-value-disallowed-list': 'error',
   * 'selector-attribute-name-disallowed-list': 'error',
   * 'selector-attribute-operator-allowed-list': 'error',
   * 'selector-attribute-operator-disallowed-list': 'error',
   * 'selector-combinator-allowed-list': 'error',
   * 'selector-combinator-disallowed-list': 'error',
   * 'selector-disallowed-list': 'error',
   * 'selector-max-attribute': 'error',
   * 'selector-max-class': 'error',
   * 'selector-max-combinators': 'error',
   * 'selector-max-compound-selectors': 'error',
   * 'selector-max-id': 'error',
   * 'selector-max-pseudo-class': 'error',
   * 'selector-max-specificity': 'error',
   * 'selector-max-type': 'error',
   * 'selector-max-universal': 'error',
   * 'selector-nested-pattern': 'error',
   * 'selector-no-qualifying-type': 'error',
   * 'selector-pseudo-class-allowed-list': 'error',
   * 'selector-pseudo-class-disallowed-list': 'error',
   * 'selector-pseudo-element-allowed-list': 'error',
   * 'selector-pseudo-element-disallowed-list': 'error',
   * 'rule-selector-property-disallowed-list': 'error',
   * 'media-feature-name-allowed-list': 'error',
   * 'media-feature-name-disallowed-list': 'error',
   * 'media-feature-name-value-allowed-list': 'error',
   * 'at-rule-allowed-list': 'error',
   * 'at-rule-disallowed-list': 'error',
   * 'at-rule-property-required-list': 'error',
   * 'comment-pattern': 'error',
   * 'comment-word-disallowed-list': 'error',
   * 'max-nesting-depth': 'error',
   * 'no-unknown-animations': 'error',
   * 'unicode-bom': 'error',
   * 'function-comma-newline-before': 'error',
   * 'value-list-comma-newline-before': 'error',
   * 'declaration-block-semicolon-newline-before': 'error',
   * 'block-closing-brace-space-after': 'error',
   * 'block-opening-brace-newline-before': 'error',
   * 'selector-list-comma-newline-before': 'error',
   * 'selector-list-comma-space-after': 'error',
   * 'media-query-list-comma-newline-before': 'error',
   * 'at-rule-name-newline-after': 'error',
   * 'at-rule-semicolon-space-before': 'error',
   * 'linebreaks': 'error',
   */
};
